name: EasyCloud Build

# Review: please add some documentation comments 
# explaining what's the output and why we do it this way

on:
  pull_request:
    paths:
      - '.github/workflows/**'
      - 'src/**'
      - 'apps/**/appinfo/info.xml'
      - 'package.json'
      - 'package-lock.json'
      - 'tsconfig.json'
      - '**.js'
      - '**.ts'
      - '**.vue'
  push:
    branches:
      - main
      - master
      - stable*
      - ionos-dev
      - mk/dev/HDFRONT-6801-build-frontend-artifact

env:
  TARGET_PACKAGE_NAME: easy-storage.zip
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read

jobs:
  easycloud-build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    name: easycloud-build
    steps:
      - name: Checkout server
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Zip dependencies
        # Review:
        # * -x *.github/* is not necessary as it nor the root is included anyway
        # * let's multiline the list of files passed to zip
        run: |
          buildDate=$(date +%s)
          buildRef=${{ github.sha }}
          jq -n --arg buildDate "$buildDate" --arg buildRef "$buildRef" '{buildDate: $buildDate, buildRef: $buildRef}' > version.json

          echo "version.json created"
          jq . version.json

          echo "zip relevant files to ${{ env.TARGET_PACKAGE_NAME }}"
          zip -r "${{ env.TARGET_PACKAGE_NAME }}" 3rdparty/ apps/ custom-apps/ apps-external/ config/ core/ dist/ lib/ ocs/ ocs-provider/ resources/ themes/ AUTHORS composer.json composer.lock console.php COPYING cron.php index.html index.php occ package.json package-lock.json public.php remote.php robots.txt status.php version.php version.json \
          -x '*.github/*' \
          -x "apps/theming/img/background/**" \
          -x "apps/*/tests/**" \
          -x "apps-external/*/tests**" \
          -x "**/cypress/**"

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"

      - name: Create Dockerfile
        # Review: why cat into a variable via sub-shell, not redirect?
        run: |
          DOCKER_BUILD_FILE=$(cat << EOF
          FROM busybox as builder
          COPY ./${{ env.TARGET_PACKAGE_NAME }} /
          WORKDIR /builder
          RUN unzip /${{ env.TARGET_PACKAGE_NAME }} -d /builder

          FROM scratch
          WORKDIR /app
          VOLUME /app
          COPY --from=builder /builder /app
          EOF
          )
          echo "$DOCKER_BUILD_FILE" > Dockerfile

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Show changes on failure
        if: failure()
        run: |
          git status
          git --no-pager diff
          exit 1 # make it red to grab attention
