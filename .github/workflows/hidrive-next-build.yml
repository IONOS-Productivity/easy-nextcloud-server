name: Hidrive Next Build

# SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors
# SPDX-FileCopyrightText: 2024 STRATO AG
# SPDX-License-Identifier: AGPL-3.0-or-later

# The Hidrive Next source is packaged as a container image.
# This is a workaround because releases can not be created without tags
# and we want to be able to create snapshots from branches.

on:
  pull_request:
    paths:
      - '.github/workflows/**'
      - 'src/**'
      - 'custom-npms/**'
      - 'apps/**'
      - 'apps/**/appinfo/info.xml'
      - 'apps-custom/**'
      - 'package.json'
      - 'package-lock.json'
      - 'themes/**'
      - 'tsconfig.json'
      - '**.js'
      - '**.ts'
      - '**.vue'
  push:
    branches:
      - main
      - master
      - stable*
      - ionos-dev
      - ionos-dev30

env:
  TARGET_PACKAGE_NAME: hidrive-next.zip
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read

jobs:
  hidrive-next-build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout server
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7
        with:
          submodules: true

      - name: Create dummy zip
        run: |
          zip -r ${{ env.TARGET_PACKAGE_NAME }} . -x ".git/*" ".github/*"

      - name: Upload artifact result for job hidrive-next-build
        uses: actions/upload-artifact@v4
        with:
          name: hidrive_next_build_zip
          path: ${{ env.TARGET_PACKAGE_NAME }}

      - name: Show changes on failure
        if: failure()
        run: |
          git status
          git --no-pager diff
          exit 1 # make it red to grab attention

  hidrive-next-build-disabled:
    if: false
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    name: hidrive-next-build
    steps:
      - name: Checkout server
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7
        with:
          submodules: true

      - name: Set up node with version from package.json's engines
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: "package.json"

      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y make zip unzip

      - name: Verify dependencies versions
        run: make --version && node --version && npm --version

      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@c541c155eee45413f5b09a52248675b1a2575231 #v2.31.1
        with:
          tools: composer:v2
          extensions: gd, zip, curl, xml, xmlrpc, mbstring, sqlite, xdebug, pgsql, intl, imagick, gmp, apcu, bcmath, redis, soap, imap, opcache
        env:
          runner: self-hosted

      - name: Verify PHP install
        run: php -i && php -m

      - name: Build Nextcloud
        run: make -f IONOS/Makefile build_nextcloud FONTAWESOME_PACKAGE_TOKEN=${{ secrets.FONTAWESOME_PACKAGE_TOKEN }}

      - name: Install dependencies & build simplesettings app
        env:
          CYPRESS_INSTALL_BINARY: 0
          PUPPETEER_SKIP_DOWNLOAD: true
        run: make -f IONOS/Makefile build_dep_simplesettings_app

      - name: Install dependencies & build viewer app
        env:
          CYPRESS_INSTALL_BINARY: 0
          PUPPETEER_SKIP_DOWNLOAD: true
        run: make -f IONOS/Makefile build_dep_viewer_app

      - name: Install dependencies & build user_oidc app
        env:
          CYPRESS_INSTALL_BINARY: 0
          PUPPETEER_SKIP_DOWNLOAD: true
        run: make -f IONOS/Makefile build_dep_user_oidc_app

      - name: Build Custom CSS
        run: make -f IONOS/Makefile build_dep_theming_app

      - name: Install dependencies & build IONOS theme custom elements
        env:
          CYPRESS_INSTALL_BINARY: 0
          PUPPETEER_SKIP_DOWNLOAD: true
        run: make -f IONOS/Makefile build_dep_ionos_theme

      - name: Add config partials
        run: make -f IONOS/Makefile add_config_partials

      - name: Zip dependencies
        run: make -f IONOS/Makefile zip_dependencies TARGET_PACKAGE_NAME=${{ env.TARGET_PACKAGE_NAME }}

      - name: Upload artifact result for job hidrive-next-build
        uses: actions/upload-artifact@v4
        with:
          name: hidrive_next_build_zip
          path: ${{ env.TARGET_PACKAGE_NAME }}

      - name: Show changes on failure
        if: failure()
        run: |
          git status
          git --no-pager diff
          exit 1 # make it red to grab attention

  hidirve-next-artifact-to-ghcr_io:
    if: false
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    name: Push artifact to ghcr.io
    needs: hidrive-next-build

    steps:
      - name: Download artifact zip
        uses: actions/download-artifact@v4
        with:
          name: hidrive_next_build_zip

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"

      - name: Create Dockerfile
        run: |
          cat >Dockerfile << EOF
          FROM busybox as builder
          COPY ./${{ env.TARGET_PACKAGE_NAME }} /
          WORKDIR /builder
          RUN unzip /${{ env.TARGET_PACKAGE_NAME }} -d /builder

          FROM scratch
          WORKDIR /app
          VOLUME /app
          COPY --from=builder /builder /app
          EOF

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Show changes on failure
        if: failure()
        run: |
          git status
          git --no-pager diff
          exit 1 # make it red to grab attention

  hidirve-next-artifact-to-ghcr_io-kaniko:
#    runs-on: ubuntu-latest
    runs-on: self-hosted
    container:
      image: gcr.io/kaniko-project/executor:debug

    permissions:
      contents: read
      packages: write

    name: Push artifact to ghcr.io via kaniko
    needs: hidrive-next-build

    steps:
#      - name: Download artifact zip
#        uses: actions/download-artifact@v4
#        with:
#          name: hidrive_next_build_zip

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1

#      - name: Log in to the Container registry
#        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Dockerfile
        run: |
          cat >Dockerfile << EOF
          FROM scratch
          WORKDIR /app
          VOLUME /app
          RUN echo "Hello, World!" > /app/index.html
          EOF

      - name: Create .docker auth file
        run: |
          mkdir -p /kaniko/.docker
          GITHUB_AUTH="{\"auth\":\"$(echo -n ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} | base64)\"}"
          HARBOR_AUTH="{\"auth\":\"$(echo -n ${{ secrets.HARBOR_USERNAME }}:${{ secrets.HARBOR_PASSWORD }} | base64)\"}"
          # echo "{\"auths\":{\"ghcr.io\":$GITHUB_AUTH, \"harbor.infra.cluster.ionos.com\":$HARBOR_AUTH}}" > /kaniko/.docker/config.json
          echo "{\"auths\":{\"ghcr.io\":$GITHUB_AUTH}}" > /kaniko/.docker/config.json

      - name: Determine Docker Image Tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG_NAME=${GITHUB_REF#refs/tags/}
            echo "DOCKER_IMAGE_TAG=$TAG_NAME" >> $GITHUB_ENV
          else
            echo "DOCKER_IMAGE_TAG=tmp-latest" >> $GITHUB_ENV
          fi

      - name: Lowercase the image name
        run: echo "IMAGE_NAME_LOWERCASED=`echo ${{env.IMAGE_NAME}} | tr '[:upper:]' '[:lower:]'`" >>${GITHUB_ENV}

      - name: Build and push Docker image with Kaniko
        run: |
          /kaniko/executor \
          --build-arg GITHUB_USERNAME=${{ github.actor }} \
          --build-arg GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} \
          --label org.opencontainers.image.url="${{ github.repository }}" \
          --label org.opencontainers.image.source="${{ github.repository }}" \
          --label org.opencontainers.image.title="nc-server" \
          --label org.opencontainers.image.revision="dea43087f4851f2d44cbfb487ad94dd83280ea8d" \
          --label org.opencontainers.image.created="2024-11-26T11:59:51.396Z" \
          --label org.opencontainers.image.version="pr-60" \
          --label org.opencontainers.image.description="HiDrive Next server" \
          --label org.opencontainers.image.licenses="AGPL-3.0" \
          --context . \
          --verbosity info \
          --destination "${{ env.REGISTRY }}/${{env.IMAGE_NAME_LOWERCASED}}:${{ env.DOCKER_IMAGE_TAG }}"

      - name: Show changes on failure
        if: failure()
        run: |
          exit 1 # make it red to grab attention
