variables:
  GIT_SUBMODULE_FORCE_HTTPS: 1
  RELEASE_VERSION_POSTFIX: "-dev"

build:
  stage: build
  image: reg.server.lan/moc-dev/moc-alpine:3.19.0
  before_script:
    - apk add --no-cache curl jq zip git
  rules:
    - if: $CI_COMMIT_REF_NAME == "stable27-ionos-adaptions"
      when: always
      variables:
        RELEASE_VERSION_POSTFIX: ""  # Override globally-defined RELEASE_VERSION_POSTFIX
    - if: ($CI_COMMIT_REF_NAME =~ /^.*\/dev\/.*$/ || $CI_COMMIT_REF_NAME =~ /^dev\/.+$/)
      variables:
        RELEASE_VERSION_POSTFIX: "-$CI_COMMIT_REF_SLUG-dev"
      when: manual
    - when: never
  script:
    - git submodule update --init
    - echo "zip relevant files to $TARGET_PACKAGE_NAME"
    - zip -r "$TARGET_PACKAGE_NAME" 3rdparty/ apps/ custom-apps/ apps-external/ config/ core/ dist/ lib/ ocs/ ocs-provider/ resources/ themes/ AUTHORS composer.json composer.lock console.php COPYING cron.php index.html index.php occ package.json package-lock.json public.php remote.php robots.txt status.php version.php -x "apps/theming/img/background/**" -x "apps/*/tests/**" -x "apps-external/*/tests**" -x "**/cypress/**"
    - echo "publish $TARGET_PACKAGE_NAME to gitlab package registry"
    - TARGET_PACKAGE_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/easystorage/${TARGET_PACKAGE_VERSION}${RELEASE_VERSION_POSTFIX}/${TARGET_PACKAGE_NAME}"
    - echo "TARGET_PACKAGE_URL:$TARGET_PACKAGE_URL"
    - RESPONSE=$(curl --insecure --header "JOB-TOKEN:$CI_JOB_TOKEN" --upload-file "./$TARGET_PACKAGE_NAME" "${TARGET_PACKAGE_URL}?select=package_file")
    - echo "$RESPONSE" | jq
  variables:
    TARGET_PACKAGE_NAME: "easy-storage.zip"
    TARGET_PACKAGE_VERSION: "latest"
  artifacts:
    name: "easy-storage-build-${CI_COMMIT_REF_NAME}"
    paths:
      - easy-storage.zip
    expose_as: "EasyStorage build"
    when: on_success
